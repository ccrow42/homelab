kind: Namespace
apiVersion: v1
metadata:
  name: kuma
---
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma-service
  namespace: kuma
spec:
  selector:
    app: uptime-kuma
  ports:
  - name: uptime-kuma
    port: 3001
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: uptime-kuma
  namespace: kuma
spec:
  replicas: 1
  serviceName: uptime-kuma-service
  selector:
    matchLabels:
      app: uptime-kuma
  template:
    metadata:
      labels:
        app: uptime-kuma
    spec:
      containers:
        - name: uptime-kuma
          image: louislam/uptime-kuma:latest
          env:
            - name: UPTIME_KUMA_PORT
              value: "3001"
            - name: PORT
              value: "3001"
          ports:
            - name: uptime-kuma
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - name: kuma-data
              mountPath: /app/data

  volumeClaimTemplates:
    - metadata:
        name: kuma-data
      spec:
        accessModes: ["ReadWriteOnce"]
        volumeMode: Filesystem
        resources:
          requests:
            storage: 1Gi
        storageClassName: local-path
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kuma
  namespace: kuma
  annotations:
    kubernetes.io/ingress.class: "nginx"    
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "letsencrypt-prod-dns01"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/16,174.21.143.8/32,104.167.184.2/32,131.191.29.18/32,192.173.169.229/32,73.97.37.245/32,76.146.65.221/32,136.226.57.29/32"
spec:
  tls:
  - hosts:
    - status.ccrow.org
    secretName: status.ccrow.org
  rules:
  - host: status.ccrow.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: uptime-kuma-service
            port:
              number: 3001