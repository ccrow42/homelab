---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
    spec:
#      tolerations:
#        - key: "arch"
#          operator: "Equal"
#          value: "amd64"
#          effect: "NoSchedule"
#      nodeSelector:
#        kubernetes.io/arch: amd64
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: docker.io/jellyfin/jellyfin:latest
        imagePullPolicy: IfNotPresent
        name: jellyfin
        ports:
        - containerPort: 8096
          protocol: TCP
        volumeMounts:
        - mountPath: /data/movies
          name: movies 
        - mountPath: /data/plex-norepl
          name: plex-norepl
        - mountPath: /data/tv
          name: tv
        - mountPath: /data/music
          name: music     
        - mountPath: /config
          name: jellyfin-config
      restartPolicy: Always
      volumes:
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config
      - name: plex-norepl
        hostPath:
          path: /mnt/plex-norepl
      - name: movies
        hostPath:
          path: /mnt/movies
      - name: tv
        hostPath:
          path: /mnt/tv
      - name: music
        hostPath:
          path: /mnt/music
