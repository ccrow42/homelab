
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lidarr
    app.kubernetes.io/instance: prod-plexstack
  name: lidarr-deployment
  namespace: plexstack
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: lidarr
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: lidarr
      annotations:
        backup.velero.io/backup-volumes-excludes: lidarr-downloads,lidarr-music
    spec:
      imagePullSecrets:
      - name: registry-secret
      containers:
      - env:
        - name: PUID
          value: "999"
        - name: PGID
          value: "999"
        image: registry.lan.ccrow.org/ghcr.io/linuxserver/lidarr
        imagePullPolicy: Always
        name: lidarr
        ports:
        - containerPort: 8686
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: lidarr-config
        - mountPath: /downloads
          name: lidarr-downloads
        - mountPath: /music
          name: lidarr-music
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: lidarr-config
        persistentVolumeClaim:
          claimName: lidarr-pvc
      - name: lidarr-downloads
        nfs:
          server: 10.0.2.8
          path: /volume1/uberplex/downloads
      - name: lidarr-music
        nfs:
          server: 10.0.2.8
          path: /volume1/Music

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: prod-plexstack
  name: lidarr-service
  namespace: plexstack
spec:
  ports:
  - port: 8686
  selector:
    app: lidarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod-dns01
    nginx.ingress.kubernetes.io/auth-url: |-
        http://ak-outpost-authentik-embedded-outpost.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
    nginx.ingress.kubernetes.io/auth-signin: |-
        https://lidarr.lan.ccrow.org/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-response-headers: |-
        Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;    
  labels:
    app.kubernetes.io/instance: prod-plexstack
  name: ingress-lidarr
  namespace: plexstack
spec:
  ingressClassName: nginx
  rules:
  - host: lidarr.lan.ccrow.org
    http:
      paths:
      - backend:
          service:
            name: lidarr-service
            port:
              number: 8686
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - lidarr.lan.ccrow.org
    secretName: lidarr-tls